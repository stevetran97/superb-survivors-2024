-- --------------------------------------- --
-- Non-Companion related code         --
-- --------------------------------------- --
---comment
---@param TaskMangerIn any
-- function AI_NonCompanion(TaskMangerIn)
--     local currentNPC = TaskMangerIn.parent; -- replaces both "ASuperbSurvivor" and "NPC".
--     local npcBravery = currentNPC:getBravePoints();
--     local npcWeapon = currentNPC.player:getPrimaryHandItem();
--     --
--     local followAttackRange = GFollowDistance + currentNPC:getAttackRange();
--     --
--     local distanceBetweenEnemyAndFollowTarget = math.huge;
--     local distance_AnyEnemy = math.huge;
--     -- Cows: Added a check... otherwise distance_AnyEnemy is always 1 or nil.
--     -- Get Nearest Enemy Distance + Distance between that enemy and person you are following
--     if (currentNPC.LastEnemySeen ~= nil) then
--         distance_AnyEnemy = GetCheap3DDistanceBetween(currentNPC.LastEnemySeen, currentNPC:Get()); -- idk if this works
--         distanceBetweenEnemyAndFollowTarget = GetCheap3DDistanceBetween(currentNPC.LastEnemySeen, currentNPC:getFollowChar());
--     end

--     local isEnemySurvivor = (instanceof(currentNPC.LastEnemySeen, "IsoPlayer"));
--     local enemySurvivor = nil;

--     if isEnemySurvivor then
--         local id = currentNPC.LastEnemySeen:getModData().ID;
--         enemySurvivor = SSM:Get(id);
--     end

--     -- --------------------------------------- --
--     -- Pursue Task 							   --
--     -- --------------------------------------- --
--     -- Pursue seems to work fine tho
--     if currentNPC:Task_IsPursue_SC() == true
--         -- and (distance_AnyEnemy < currentNPC:NPC_CheckPursueScore()) -- Batmane - To Delete this because it is already included in currentNPC:Task _IsPursue_SC()
--     then
--         if currentNPC:NPC_CheckIfCanReadyGun() then
--             TaskMangerIn:AddToTop(PursueTask:new(currentNPC, currentNPC.LastEnemySeen)) -- If all checks out, pursue target
--         -- Batmane disable this because all non companion npcs were equiping guns as a result
--         -- else 
--         --     CreateLogLine('BATMANETESTFUNC = ', true, tostring(currentNPC:getName()) .. ' Companion can requip gun due to pursuit')
--         --     currentNPC:ReadyGun(npcWeapon);
--         end
--     end
--     --
--     if checkAiTaskIsNot(TaskMangerIn, "Attack")
--         and checkAiTaskIsNot(TaskMangerIn, "Threaten")
--         and checkAiTaskIsNot(TaskMangerIn, "First Aide")
--         and checkAiTaskIsNot(TaskMangerIn, "Flee")
--         and currentNPC:isInSameRoom(currentNPC.LastEnemySeen)
--         and currentNPC:getDangerSeenCount() > 0                        -- cant attack what you don't see. must have seen an enemy in danger range to attack
--         and (currentNPC:getCurrentTask() ~= "Follow"
--             or distanceBetweenEnemyAndFollowTarget < followAttackRange) -- move to engage an enemie only if they within follow range (when following)
--     then
--         if currentNPC.player
--             and currentNPC.player:getModData().isRobber
--             and not currentNPC.player:getModData().hitByCharacter
--             and isEnemySurvivor
--             and not enemySurvivor.player:getModData().dealBreaker
--         then
--             TaskMangerIn:AddToTop(ThreatenTask:new(currentNPC, enemySurvivor, "Scram!"))
--         else
--             TaskMangerIn:AddToTop(AttackTask:new(currentNPC))
--         end
--     end
--     -- ----------------------------- --
--     -- New: To attempt players that are NOT trying to encounter a fight,
--     -- should be able to run away. maybe a dice roll for the future?
--     -- ----------------------------- --
--     if isEnemySurvivor
--         and checkAiTaskIs(TaskMangerIn, "Threaten")
--         and distance_AnyEnemy > 10
--         and not checkAiTaskIs(TaskMangerIn, "Flee")
--     then
--         -- End
--         TaskMangerIn:AddToTop(WanderTask:new(currentNPC))
--         TaskMangerIn:AddToTop(AttemptEntryIntoBuildingTask:new(currentNPC, nil))
--         TaskMangerIn:AddToTop(WanderTask:new(currentNPC))
--         TaskMangerIn:AddToTop(FindBuildingTask:new(currentNPC))
--         -- Start
--     end

--     -- ----------------------------- --
--     -- 	Gun Readying / Reloading     --
--     -- ----------------------------- --
--     -- Batmane to do - figure out what this does and get rid of it if not needed
--     -- Do I need to switch to a side arm/other gun
--     -- The only check that prevents this from causing the npc from equiping a gun is that the last gun used is nil
--     -- This seems excessive and unnecessary. It also seems like there are a tonne of edge cases where this can break
--     -- Ie. What if they have more than one 'previous gun'. This only saves one and switches to that gun
--     if currentNPC:getNeedAmmo()
--         and currentNPC:hasAmmoForPrevGun()
--         and currentNPC:isInAction() == false -- Not sure what this does
--         and TaskMangerIn:getCurrentTask() ~= "Take Gift"
--         and TaskMangerIn:getCurrentTask() ~= "Flee" -- New
--         and TaskMangerIn:getCurrentTask() ~= "Flee From Spot" -- New
--         and currentNPC:getDangerSeenCount() == 0
--     then
--         currentNPC:setNeedAmmo(false);
--         currentNPC:reEquipGun();
--     end

--    -- ----------------------------- --
--     -- 	Equip Weapon                 --
--     -- ----------------------------- --
--     if currentNPC:hasWeapon()
--         and currentNPC:Get():getPrimaryHandItem() == nil
--         and TaskMangerIn:getCurrentTask() ~= "Equip Weapon"
--     then
--         TaskMangerIn:AddToTop(EquipWeaponTask:new(currentNPC));
--     end

--     -- ----------------------------- --
--     -- 	Handle Guns                 --
--     -- ----------------------------- --
--     -- CreateLogLine('BATMANETESTFUNC = ', true, tostring(currentNPC:getName()) .. ' currentNPC:isInAction() = ' ..tostring(currentNPC:isInAction()))
--     if currentNPC:NPC_CheckIfCanReadyGun()
--     then
--         currentNPC:ReadyGun(npcWeapon);
--     end

--     -- ----------------------------- --
--     -- 	Flee
--     -- ----------------------------- --
--     -- Cows: Conditions for fleeing and healing...
--     if TaskMangerIn:getCurrentTask() ~= "Flee" then
--         -- Cowardice
--         if 
--             currentNPC:getDangerSeenCount() > npcBravery
--             -- and currentNPC:hasWeapon()
--             -- and not currentNPC:usingGun()
--             and currentNPC.EnemiesOnMe > 2
--         then
--             currentNPC:Speak("This is too much! Let's get out of here!");
--             TaskMangerIn:AddToTop(FleeTask:new(currentNPC));
--         -- Injured and need to Heal
--         elseif (currentNPC:HasInjury() and currentNPC:getDangerSeenCount() > 0) then
--             currentNPC:Speak("Fuck! I'm hurt and I need to heal!");
--             TaskMangerIn:AddToTop(FleeTask:new(currentNPC, true, 8));
--         end
--     end
--     -- ----------------------------- --
--     -- Heal self if there are no dangers nearby
--     -- ----------------------------- --
--     if (currentNPC:HasInjury() and currentNPC.EnemiesOnMe <= 0) then
--         if (TaskMangerIn:getCurrentTask() ~= "First Aide") then
--             currentNPC:Speak("Healing up!");
--             TaskMangerIn:AddToTop(FirstAideTask:new(currentNPC));
--         end
--     end
-- end
